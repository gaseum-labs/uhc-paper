From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: balduvian <emmettglaser@gmail.com>
Date: Fri, 18 Mar 2022 15:35:39 -0700
Subject: [PATCH] Hardload new biomes


diff --git a/src/main/java/net/minecraft/data/worldgen/biome/Biomes.java b/src/main/java/net/minecraft/data/worldgen/biome/Biomes.java
new file mode 100644
index 0000000000000000000000000000000000000000..30978142b9f8c65c8b008c7aec7f1e1961dcc04e
--- /dev/null
+++ b/src/main/java/net/minecraft/data/worldgen/biome/Biomes.java
@@ -0,0 +1,143 @@
+package net.minecraft.data.worldgen.biome;
+
+import net.minecraft.core.Holder;
+import net.minecraft.data.BuiltinRegistries;
+import net.minecraft.resources.ResourceKey;
+import net.minecraft.world.level.biome.Biome;
+
+public abstract class Biomes {
+    private static void register(ResourceKey<Biome> key, Biome biome) {
+        BuiltinRegistries.register(BuiltinRegistries.BIOME, key, biome);
+    }
+
+    public static Holder<Biome> bootstrap() {
+        return BuiltinRegistries.BIOME.getHolderOrThrow(net.minecraft.world.level.biome.Biomes.PLAINS);
+    }
+
+    static {
+        register(net.minecraft.world.level.biome.Biomes.THE_VOID, OverworldBiomes.theVoid());
+        register(net.minecraft.world.level.biome.Biomes.PLAINS, OverworldBiomes.plains(false, false, false));
+        register(net.minecraft.world.level.biome.Biomes.SUNFLOWER_PLAINS, OverworldBiomes.plains(true, false, false));
+        register(net.minecraft.world.level.biome.Biomes.SNOWY_PLAINS, OverworldBiomes.plains(false, true, false));
+        register(net.minecraft.world.level.biome.Biomes.ICE_SPIKES, OverworldBiomes.plains(false, true, true));
+        register(net.minecraft.world.level.biome.Biomes.DESERT, OverworldBiomes.desert());
+        register(net.minecraft.world.level.biome.Biomes.SWAMP, OverworldBiomes.swamp());
+        register(net.minecraft.world.level.biome.Biomes.FOREST, OverworldBiomes.forest(false, false, false));
+        register(net.minecraft.world.level.biome.Biomes.FLOWER_FOREST, OverworldBiomes.forest(false, false, true));
+        register(net.minecraft.world.level.biome.Biomes.BIRCH_FOREST, OverworldBiomes.forest(true, false, false));
+        register(net.minecraft.world.level.biome.Biomes.DARK_FOREST, OverworldBiomes.darkForest());
+        register(net.minecraft.world.level.biome.Biomes.OLD_GROWTH_BIRCH_FOREST, OverworldBiomes.forest(true, true, false));
+        register(net.minecraft.world.level.biome.Biomes.OLD_GROWTH_PINE_TAIGA, OverworldBiomes.oldGrowthTaiga(false));
+        register(net.minecraft.world.level.biome.Biomes.OLD_GROWTH_SPRUCE_TAIGA, OverworldBiomes.oldGrowthTaiga(true));
+        register(net.minecraft.world.level.biome.Biomes.TAIGA, OverworldBiomes.taiga(false));
+        register(net.minecraft.world.level.biome.Biomes.SNOWY_TAIGA, OverworldBiomes.taiga(true));
+        register(net.minecraft.world.level.biome.Biomes.SAVANNA, OverworldBiomes.savanna(false, false));
+        register(net.minecraft.world.level.biome.Biomes.SAVANNA_PLATEAU, OverworldBiomes.savanna(false, true));
+        register(net.minecraft.world.level.biome.Biomes.WINDSWEPT_HILLS, OverworldBiomes.windsweptHills(false));
+        register(net.minecraft.world.level.biome.Biomes.WINDSWEPT_GRAVELLY_HILLS, OverworldBiomes.windsweptHills(false));
+        register(net.minecraft.world.level.biome.Biomes.WINDSWEPT_FOREST, OverworldBiomes.windsweptHills(true));
+        register(net.minecraft.world.level.biome.Biomes.WINDSWEPT_SAVANNA, OverworldBiomes.savanna(true, false));
+        register(net.minecraft.world.level.biome.Biomes.JUNGLE, OverworldBiomes.jungle());
+        register(net.minecraft.world.level.biome.Biomes.SPARSE_JUNGLE, OverworldBiomes.sparseJungle());
+        register(net.minecraft.world.level.biome.Biomes.BAMBOO_JUNGLE, OverworldBiomes.bambooJungle());
+        register(net.minecraft.world.level.biome.Biomes.BADLANDS, OverworldBiomes.badlands(false));
+        register(net.minecraft.world.level.biome.Biomes.ERODED_BADLANDS, OverworldBiomes.badlands(false));
+        register(net.minecraft.world.level.biome.Biomes.WOODED_BADLANDS, OverworldBiomes.badlands(true));
+        register(net.minecraft.world.level.biome.Biomes.MEADOW, OverworldBiomes.meadow());
+        register(net.minecraft.world.level.biome.Biomes.GROVE, OverworldBiomes.grove());
+        register(net.minecraft.world.level.biome.Biomes.SNOWY_SLOPES, OverworldBiomes.snowySlopes());
+        register(net.minecraft.world.level.biome.Biomes.FROZEN_PEAKS, OverworldBiomes.frozenPeaks());
+        register(net.minecraft.world.level.biome.Biomes.JAGGED_PEAKS, OverworldBiomes.jaggedPeaks());
+        register(net.minecraft.world.level.biome.Biomes.STONY_PEAKS, OverworldBiomes.stonyPeaks());
+        register(net.minecraft.world.level.biome.Biomes.RIVER, OverworldBiomes.river(false));
+        register(net.minecraft.world.level.biome.Biomes.FROZEN_RIVER, OverworldBiomes.river(true));
+        register(net.minecraft.world.level.biome.Biomes.BEACH, OverworldBiomes.beach(false, false));
+        register(net.minecraft.world.level.biome.Biomes.SNOWY_BEACH, OverworldBiomes.beach(true, false));
+        register(net.minecraft.world.level.biome.Biomes.STONY_SHORE, OverworldBiomes.beach(false, true));
+        register(net.minecraft.world.level.biome.Biomes.WARM_OCEAN, OverworldBiomes.warmOcean());
+        register(net.minecraft.world.level.biome.Biomes.LUKEWARM_OCEAN, OverworldBiomes.lukeWarmOcean(false));
+        register(net.minecraft.world.level.biome.Biomes.DEEP_LUKEWARM_OCEAN, OverworldBiomes.lukeWarmOcean(true));
+        register(net.minecraft.world.level.biome.Biomes.OCEAN, OverworldBiomes.ocean(false));
+        register(net.minecraft.world.level.biome.Biomes.DEEP_OCEAN, OverworldBiomes.ocean(true));
+        register(net.minecraft.world.level.biome.Biomes.COLD_OCEAN, OverworldBiomes.coldOcean(false));
+        register(net.minecraft.world.level.biome.Biomes.DEEP_COLD_OCEAN, OverworldBiomes.coldOcean(true));
+        register(net.minecraft.world.level.biome.Biomes.FROZEN_OCEAN, OverworldBiomes.frozenOcean(false));
+        register(net.minecraft.world.level.biome.Biomes.DEEP_FROZEN_OCEAN, OverworldBiomes.frozenOcean(true));
+        register(net.minecraft.world.level.biome.Biomes.MUSHROOM_FIELDS, OverworldBiomes.mushroomFields());
+        register(net.minecraft.world.level.biome.Biomes.DRIPSTONE_CAVES, OverworldBiomes.dripstoneCaves());
+        register(net.minecraft.world.level.biome.Biomes.LUSH_CAVES, OverworldBiomes.lushCaves());
+        register(net.minecraft.world.level.biome.Biomes.NETHER_WASTES, NetherBiomes.netherWastes());
+        register(net.minecraft.world.level.biome.Biomes.WARPED_FOREST, NetherBiomes.warpedForest());
+        register(net.minecraft.world.level.biome.Biomes.CRIMSON_FOREST, NetherBiomes.crimsonForest());
+        register(net.minecraft.world.level.biome.Biomes.SOUL_SAND_VALLEY, NetherBiomes.soulSandValley());
+        register(net.minecraft.world.level.biome.Biomes.BASALT_DELTAS, NetherBiomes.basaltDeltas());
+        register(net.minecraft.world.level.biome.Biomes.THE_END, EndBiomes.theEnd());
+        register(net.minecraft.world.level.biome.Biomes.END_HIGHLANDS, EndBiomes.endHighlands());
+        register(net.minecraft.world.level.biome.Biomes.END_MIDLANDS, EndBiomes.endMidlands());
+        register(net.minecraft.world.level.biome.Biomes.SMALL_END_ISLANDS, EndBiomes.smallEndIslands());
+        register(net.minecraft.world.level.biome.Biomes.END_BARRENS, EndBiomes.endBarrens());
+
+        // UHC BIOMES
+        register(net.minecraft.world.level.biome.Biomes.THE_VOID_UHC, OverworldBiomes.theVoid());
+        register(net.minecraft.world.level.biome.Biomes.PLAINS_UHC, OverworldBiomes.plains(false, false, false));
+        register(net.minecraft.world.level.biome.Biomes.SUNFLOWER_PLAINS_UHC, OverworldBiomes.plains(true, false, false));
+        register(net.minecraft.world.level.biome.Biomes.SNOWY_PLAINS_UHC, OverworldBiomes.plains(false, true, false));
+        register(net.minecraft.world.level.biome.Biomes.ICE_SPIKES_UHC, OverworldBiomes.plains(false, true, true));
+        register(net.minecraft.world.level.biome.Biomes.DESERT_UHC, OverworldBiomes.desert());
+        register(net.minecraft.world.level.biome.Biomes.SWAMP_UHC, OverworldBiomes.swamp());
+        register(net.minecraft.world.level.biome.Biomes.FOREST_UHC, OverworldBiomes.forest(false, false, false));
+        register(net.minecraft.world.level.biome.Biomes.FLOWER_FOREST_UHC, OverworldBiomes.forest(false, false, true));
+        register(net.minecraft.world.level.biome.Biomes.BIRCH_FOREST_UHC, OverworldBiomes.forest(true, false, false));
+        register(net.minecraft.world.level.biome.Biomes.DARK_FOREST_UHC, OverworldBiomes.darkForest());
+        register(net.minecraft.world.level.biome.Biomes.OLD_GROWTH_BIRCH_FOREST_UHC, OverworldBiomes.forest(true, true, false));
+        register(net.minecraft.world.level.biome.Biomes.OLD_GROWTH_PINE_TAIGA_UHC, OverworldBiomes.oldGrowthTaiga(false));
+        register(net.minecraft.world.level.biome.Biomes.OLD_GROWTH_SPRUCE_TAIGA_UHC, OverworldBiomes.oldGrowthTaiga(true));
+        register(net.minecraft.world.level.biome.Biomes.TAIGA_UHC, OverworldBiomes.taiga(false));
+        register(net.minecraft.world.level.biome.Biomes.SNOWY_TAIGA_UHC, OverworldBiomes.taiga(true));
+        register(net.minecraft.world.level.biome.Biomes.SAVANNA_UHC, OverworldBiomes.savanna(false, false));
+        register(net.minecraft.world.level.biome.Biomes.SAVANNA_PLATEAU_UHC, OverworldBiomes.savanna(false, true));
+        register(net.minecraft.world.level.biome.Biomes.WINDSWEPT_HILLS_UHC, OverworldBiomes.windsweptHills(false));
+        register(net.minecraft.world.level.biome.Biomes.WINDSWEPT_GRAVELLY_HILLS_UHC, OverworldBiomes.windsweptHills(false));
+        register(net.minecraft.world.level.biome.Biomes.WINDSWEPT_FOREST_UHC, OverworldBiomes.windsweptHills(true));
+        register(net.minecraft.world.level.biome.Biomes.WINDSWEPT_SAVANNA_UHC, OverworldBiomes.savanna(true, false));
+        register(net.minecraft.world.level.biome.Biomes.JUNGLE_UHC, OverworldBiomes.jungle());
+        register(net.minecraft.world.level.biome.Biomes.SPARSE_JUNGLE_UHC, OverworldBiomes.sparseJungle());
+        register(net.minecraft.world.level.biome.Biomes.BAMBOO_JUNGLE_UHC, OverworldBiomes.bambooJungle());
+        register(net.minecraft.world.level.biome.Biomes.BADLANDS_UHC, OverworldBiomes.badlands(false));
+        register(net.minecraft.world.level.biome.Biomes.ERODED_BADLANDS_UHC, OverworldBiomes.badlands(false));
+        register(net.minecraft.world.level.biome.Biomes.WOODED_BADLANDS_UHC, OverworldBiomes.badlands(true));
+        register(net.minecraft.world.level.biome.Biomes.MEADOW_UHC, OverworldBiomes.meadow());
+        register(net.minecraft.world.level.biome.Biomes.GROVE_UHC, OverworldBiomes.grove());
+        register(net.minecraft.world.level.biome.Biomes.SNOWY_SLOPES_UHC, OverworldBiomes.snowySlopes());
+        register(net.minecraft.world.level.biome.Biomes.FROZEN_PEAKS_UHC, OverworldBiomes.frozenPeaks());
+        register(net.minecraft.world.level.biome.Biomes.JAGGED_PEAKS_UHC, OverworldBiomes.jaggedPeaks());
+        register(net.minecraft.world.level.biome.Biomes.STONY_PEAKS_UHC, OverworldBiomes.stonyPeaks());
+        register(net.minecraft.world.level.biome.Biomes.RIVER_UHC, OverworldBiomes.river(false));
+        register(net.minecraft.world.level.biome.Biomes.FROZEN_RIVER_UHC, OverworldBiomes.river(true));
+        register(net.minecraft.world.level.biome.Biomes.BEACH_UHC, OverworldBiomes.beach(false, false));
+        register(net.minecraft.world.level.biome.Biomes.SNOWY_BEACH_UHC, OverworldBiomes.beach(true, false));
+        register(net.minecraft.world.level.biome.Biomes.STONY_SHORE_UHC, OverworldBiomes.beach(false, true));
+        register(net.minecraft.world.level.biome.Biomes.WARM_OCEAN_UHC, OverworldBiomes.warmOcean());
+        register(net.minecraft.world.level.biome.Biomes.LUKEWARM_OCEAN_UHC, OverworldBiomes.lukeWarmOcean(false));
+        register(net.minecraft.world.level.biome.Biomes.DEEP_LUKEWARM_OCEAN_UHC, OverworldBiomes.lukeWarmOcean(true));
+        register(net.minecraft.world.level.biome.Biomes.OCEAN_UHC, OverworldBiomes.ocean(false));
+        register(net.minecraft.world.level.biome.Biomes.DEEP_OCEAN_UHC, OverworldBiomes.ocean(true));
+        register(net.minecraft.world.level.biome.Biomes.COLD_OCEAN_UHC, OverworldBiomes.coldOcean(false));
+        register(net.minecraft.world.level.biome.Biomes.DEEP_COLD_OCEAN_UHC, OverworldBiomes.coldOcean(true));
+        register(net.minecraft.world.level.biome.Biomes.FROZEN_OCEAN_UHC, OverworldBiomes.frozenOcean(false));
+        register(net.minecraft.world.level.biome.Biomes.DEEP_FROZEN_OCEAN_UHC, OverworldBiomes.frozenOcean(true));
+        register(net.minecraft.world.level.biome.Biomes.MUSHROOM_FIELDS_UHC, OverworldBiomes.mushroomFields());
+        register(net.minecraft.world.level.biome.Biomes.DRIPSTONE_CAVES_UHC, OverworldBiomes.dripstoneCaves());
+        register(net.minecraft.world.level.biome.Biomes.LUSH_CAVES_UHC, OverworldBiomes.lushCaves());
+        register(net.minecraft.world.level.biome.Biomes.NETHER_WASTES_UHC, NetherBiomes.netherWastes());
+        register(net.minecraft.world.level.biome.Biomes.WARPED_FOREST_UHC, NetherBiomes.warpedForest());
+        register(net.minecraft.world.level.biome.Biomes.CRIMSON_FOREST_UHC, NetherBiomes.crimsonForest());
+        register(net.minecraft.world.level.biome.Biomes.SOUL_SAND_VALLEY_UHC, NetherBiomes.soulSandValley());
+        register(net.minecraft.world.level.biome.Biomes.BASALT_DELTAS_UHC, NetherBiomes.basaltDeltas());
+        register(net.minecraft.world.level.biome.Biomes.THE_END_UHC, EndBiomes.theEnd());
+        register(net.minecraft.world.level.biome.Biomes.END_HIGHLANDS_UHC, EndBiomes.endHighlands());
+        register(net.minecraft.world.level.biome.Biomes.END_MIDLANDS_UHC, EndBiomes.endMidlands());
+        register(net.minecraft.world.level.biome.Biomes.SMALL_END_ISLANDS_UHC, EndBiomes.smallEndIslands());
+        register(net.minecraft.world.level.biome.Biomes.END_BARRENS_UHC, EndBiomes.endBarrens());
+    }
+}
diff --git a/src/main/java/net/minecraft/world/level/biome/Biomes.java b/src/main/java/net/minecraft/world/level/biome/Biomes.java
new file mode 100644
index 0000000000000000000000000000000000000000..f7e6f88f4b6a652315d1538d7a4742fc96aa552b
--- /dev/null
+++ b/src/main/java/net/minecraft/world/level/biome/Biomes.java
@@ -0,0 +1,136 @@
+package net.minecraft.world.level.biome;
+
+import net.minecraft.core.Registry;
+import net.minecraft.resources.ResourceKey;
+import net.minecraft.resources.ResourceLocation;
+
+public abstract class Biomes {
+    public static final ResourceKey<Biome> THE_VOID = register("the_void");
+    public static final ResourceKey<Biome> PLAINS = register("plains");
+    public static final ResourceKey<Biome> SUNFLOWER_PLAINS = register("sunflower_plains");
+    public static final ResourceKey<Biome> SNOWY_PLAINS = register("snowy_plains");
+    public static final ResourceKey<Biome> ICE_SPIKES = register("ice_spikes");
+    public static final ResourceKey<Biome> DESERT = register("desert");
+    public static final ResourceKey<Biome> SWAMP = register("swamp");
+    public static final ResourceKey<Biome> FOREST = register("forest");
+    public static final ResourceKey<Biome> FLOWER_FOREST = register("flower_forest");
+    public static final ResourceKey<Biome> BIRCH_FOREST = register("birch_forest");
+    public static final ResourceKey<Biome> DARK_FOREST = register("dark_forest");
+    public static final ResourceKey<Biome> OLD_GROWTH_BIRCH_FOREST = register("old_growth_birch_forest");
+    public static final ResourceKey<Biome> OLD_GROWTH_PINE_TAIGA = register("old_growth_pine_taiga");
+    public static final ResourceKey<Biome> OLD_GROWTH_SPRUCE_TAIGA = register("old_growth_spruce_taiga");
+    public static final ResourceKey<Biome> TAIGA = register("taiga");
+    public static final ResourceKey<Biome> SNOWY_TAIGA = register("snowy_taiga");
+    public static final ResourceKey<Biome> SAVANNA = register("savanna");
+    public static final ResourceKey<Biome> SAVANNA_PLATEAU = register("savanna_plateau");
+    public static final ResourceKey<Biome> WINDSWEPT_HILLS = register("windswept_hills");
+    public static final ResourceKey<Biome> WINDSWEPT_GRAVELLY_HILLS = register("windswept_gravelly_hills");
+    public static final ResourceKey<Biome> WINDSWEPT_FOREST = register("windswept_forest");
+    public static final ResourceKey<Biome> WINDSWEPT_SAVANNA = register("windswept_savanna");
+    public static final ResourceKey<Biome> JUNGLE = register("jungle");
+    public static final ResourceKey<Biome> SPARSE_JUNGLE = register("sparse_jungle");
+    public static final ResourceKey<Biome> BAMBOO_JUNGLE = register("bamboo_jungle");
+    public static final ResourceKey<Biome> BADLANDS = register("badlands");
+    public static final ResourceKey<Biome> ERODED_BADLANDS = register("eroded_badlands");
+    public static final ResourceKey<Biome> WOODED_BADLANDS = register("wooded_badlands");
+    public static final ResourceKey<Biome> MEADOW = register("meadow");
+    public static final ResourceKey<Biome> GROVE = register("grove");
+    public static final ResourceKey<Biome> SNOWY_SLOPES = register("snowy_slopes");
+    public static final ResourceKey<Biome> FROZEN_PEAKS = register("frozen_peaks");
+    public static final ResourceKey<Biome> JAGGED_PEAKS = register("jagged_peaks");
+    public static final ResourceKey<Biome> STONY_PEAKS = register("stony_peaks");
+    public static final ResourceKey<Biome> RIVER = register("river");
+    public static final ResourceKey<Biome> FROZEN_RIVER = register("frozen_river");
+    public static final ResourceKey<Biome> BEACH = register("beach");
+    public static final ResourceKey<Biome> SNOWY_BEACH = register("snowy_beach");
+    public static final ResourceKey<Biome> STONY_SHORE = register("stony_shore");
+    public static final ResourceKey<Biome> WARM_OCEAN = register("warm_ocean");
+    public static final ResourceKey<Biome> LUKEWARM_OCEAN = register("lukewarm_ocean");
+    public static final ResourceKey<Biome> DEEP_LUKEWARM_OCEAN = register("deep_lukewarm_ocean");
+    public static final ResourceKey<Biome> OCEAN = register("ocean");
+    public static final ResourceKey<Biome> DEEP_OCEAN = register("deep_ocean");
+    public static final ResourceKey<Biome> COLD_OCEAN = register("cold_ocean");
+    public static final ResourceKey<Biome> DEEP_COLD_OCEAN = register("deep_cold_ocean");
+    public static final ResourceKey<Biome> FROZEN_OCEAN = register("frozen_ocean");
+    public static final ResourceKey<Biome> DEEP_FROZEN_OCEAN = register("deep_frozen_ocean");
+    public static final ResourceKey<Biome> MUSHROOM_FIELDS = register("mushroom_fields");
+    public static final ResourceKey<Biome> DRIPSTONE_CAVES = register("dripstone_caves");
+    public static final ResourceKey<Biome> LUSH_CAVES = register("lush_caves");
+    public static final ResourceKey<Biome> NETHER_WASTES = register("nether_wastes");
+    public static final ResourceKey<Biome> WARPED_FOREST = register("warped_forest");
+    public static final ResourceKey<Biome> CRIMSON_FOREST = register("crimson_forest");
+    public static final ResourceKey<Biome> SOUL_SAND_VALLEY = register("soul_sand_valley");
+    public static final ResourceKey<Biome> BASALT_DELTAS = register("basalt_deltas");
+    public static final ResourceKey<Biome> THE_END = register("the_end");
+    public static final ResourceKey<Biome> END_HIGHLANDS = register("end_highlands");
+    public static final ResourceKey<Biome> END_MIDLANDS = register("end_midlands");
+    public static final ResourceKey<Biome> SMALL_END_ISLANDS = register("small_end_islands");
+    public static final ResourceKey<Biome> END_BARRENS = register("end_barrens");
+
+    // UHC BIOMES
+    public static final ResourceKey<Biome> THE_VOID_UHC = register("the_void_uhc");
+    public static final ResourceKey<Biome> PLAINS_UHC = register("plains_uhc");
+    public static final ResourceKey<Biome> SUNFLOWER_PLAINS_UHC = register("sunflower_plains_uhc");
+    public static final ResourceKey<Biome> SNOWY_PLAINS_UHC = register("snowy_plains_uhc");
+    public static final ResourceKey<Biome> ICE_SPIKES_UHC = register("ice_spikes_uhc");
+    public static final ResourceKey<Biome> DESERT_UHC = register("desert_uhc");
+    public static final ResourceKey<Biome> SWAMP_UHC = register("swamp_uhc");
+    public static final ResourceKey<Biome> FOREST_UHC = register("forest_uhc");
+    public static final ResourceKey<Biome> FLOWER_FOREST_UHC = register("flower_forest_uhc");
+    public static final ResourceKey<Biome> BIRCH_FOREST_UHC = register("birch_forest_uhc");
+    public static final ResourceKey<Biome> DARK_FOREST_UHC = register("dark_forest_uhc");
+    public static final ResourceKey<Biome> OLD_GROWTH_BIRCH_FOREST_UHC = register("old_growth_birch_forest_uhc");
+    public static final ResourceKey<Biome> OLD_GROWTH_PINE_TAIGA_UHC = register("old_growth_pine_taiga_uhc");
+    public static final ResourceKey<Biome> OLD_GROWTH_SPRUCE_TAIGA_UHC = register("old_growth_spruce_taiga_uhc");
+    public static final ResourceKey<Biome> TAIGA_UHC = register("taiga_uhc");
+    public static final ResourceKey<Biome> SNOWY_TAIGA_UHC = register("snowy_taiga_uhc");
+    public static final ResourceKey<Biome> SAVANNA_UHC = register("savanna_uhc");
+    public static final ResourceKey<Biome> SAVANNA_PLATEAU_UHC = register("savanna_plateau_uhc");
+    public static final ResourceKey<Biome> WINDSWEPT_HILLS_UHC = register("windswept_hills_uhc");
+    public static final ResourceKey<Biome> WINDSWEPT_GRAVELLY_HILLS_UHC = register("windswept_gravelly_hills_uhc");
+    public static final ResourceKey<Biome> WINDSWEPT_FOREST_UHC = register("windswept_forest_uhc");
+    public static final ResourceKey<Biome> WINDSWEPT_SAVANNA_UHC = register("windswept_savanna_uhc");
+    public static final ResourceKey<Biome> JUNGLE_UHC = register("jungle_uhc");
+    public static final ResourceKey<Biome> SPARSE_JUNGLE_UHC = register("sparse_jungle_uhc");
+    public static final ResourceKey<Biome> BAMBOO_JUNGLE_UHC = register("bamboo_jungle_uhc");
+    public static final ResourceKey<Biome> BADLANDS_UHC = register("badlands_uhc");
+    public static final ResourceKey<Biome> ERODED_BADLANDS_UHC = register("eroded_badlands_uhc");
+    public static final ResourceKey<Biome> WOODED_BADLANDS_UHC = register("wooded_badlands_uhc");
+    public static final ResourceKey<Biome> MEADOW_UHC = register("meadow_uhc");
+    public static final ResourceKey<Biome> GROVE_UHC = register("grove_uhc");
+    public static final ResourceKey<Biome> SNOWY_SLOPES_UHC = register("snowy_slopes_uhc");
+    public static final ResourceKey<Biome> FROZEN_PEAKS_UHC = register("frozen_peaks_uhc");
+    public static final ResourceKey<Biome> JAGGED_PEAKS_UHC = register("jagged_peaks_uhc");
+    public static final ResourceKey<Biome> STONY_PEAKS_UHC = register("stony_peaks_uhc");
+    public static final ResourceKey<Biome> RIVER_UHC = register("river_uhc");
+    public static final ResourceKey<Biome> FROZEN_RIVER_UHC = register("frozen_river_uhc");
+    public static final ResourceKey<Biome> BEACH_UHC = register("beach_uhc");
+    public static final ResourceKey<Biome> SNOWY_BEACH_UHC = register("snowy_beach_uhc");
+    public static final ResourceKey<Biome> STONY_SHORE_UHC = register("stony_shore_uhc");
+    public static final ResourceKey<Biome> WARM_OCEAN_UHC = register("warm_ocean_uhc");
+    public static final ResourceKey<Biome> LUKEWARM_OCEAN_UHC = register("lukewarm_ocean_uhc");
+    public static final ResourceKey<Biome> DEEP_LUKEWARM_OCEAN_UHC = register("deep_lukewarm_ocean_uhc");
+    public static final ResourceKey<Biome> OCEAN_UHC = register("ocean_uhc");
+    public static final ResourceKey<Biome> DEEP_OCEAN_UHC = register("deep_ocean_uhc");
+    public static final ResourceKey<Biome> COLD_OCEAN_UHC = register("cold_ocean_uhc");
+    public static final ResourceKey<Biome> DEEP_COLD_OCEAN_UHC = register("deep_cold_ocean_uhc");
+    public static final ResourceKey<Biome> FROZEN_OCEAN_UHC = register("frozen_ocean_uhc");
+    public static final ResourceKey<Biome> DEEP_FROZEN_OCEAN_UHC = register("deep_frozen_ocean_uhc");
+    public static final ResourceKey<Biome> MUSHROOM_FIELDS_UHC = register("mushroom_fields_uhc");
+    public static final ResourceKey<Biome> DRIPSTONE_CAVES_UHC = register("dripstone_caves_uhc");
+    public static final ResourceKey<Biome> LUSH_CAVES_UHC = register("lush_caves_uhc");
+    public static final ResourceKey<Biome> NETHER_WASTES_UHC = register("nether_wastes_uhc");
+    public static final ResourceKey<Biome> WARPED_FOREST_UHC = register("warped_forest_uhc");
+    public static final ResourceKey<Biome> CRIMSON_FOREST_UHC = register("crimson_forest_uhc");
+    public static final ResourceKey<Biome> SOUL_SAND_VALLEY_UHC = register("soul_sand_valley_uhc");
+    public static final ResourceKey<Biome> BASALT_DELTAS_UHC = register("basalt_deltas_uhc");
+    public static final ResourceKey<Biome> THE_END_UHC = register("the_end_uhc");
+    public static final ResourceKey<Biome> END_HIGHLANDS_UHC = register("end_highlands_uhc");
+    public static final ResourceKey<Biome> END_MIDLANDS_UHC = register("end_midlands_uhc");
+    public static final ResourceKey<Biome> SMALL_END_ISLANDS_UHC = register("small_end_islands_uhc");
+    public static final ResourceKey<Biome> END_BARRENS_UHC = register("end_barrens_uhc");
+
+    private static ResourceKey<Biome> register(String name) {
+        return ResourceKey.create(Registry.BIOME_REGISTRY, new ResourceLocation(name));
+    }
+}
